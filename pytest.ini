[pytest]
# Pytest configuration for Ludic√© test suite

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directory
testpaths = test

# Minimum Python version
minversion = 3.9

# Pytest options
addopts =
    # Show test output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Strict markers (fail on unknown markers)
    --strict-markers
    # Show warnings
    -Wd
    # Coverage options (uncomment to enable)
    # --cov=backend
    # --cov=frontend
    # --cov-report=html
    # --cov-report=term-missing
    # --cov-branch

# Markers for organizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, requires services)
    backend: Backend API tests
    frontend: Frontend bot tests
    slow: Tests that take a long time to run
    asyncio: Async tests (automatically applied)

# Async test support
asyncio_mode = auto

# Test output options
console_output_style = progress

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning

# Test collection
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    venv
    __pycache__

# Coverage options (when enabled)
[coverage:run]
source = backend,frontend
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */migrations/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
